package org.opentesting.devenv.containers;

import org.testcontainers.containers.GenericContainer;
import org.testcontainers.images.builder.ImageFromDockerfile;
import org.testcontainers.utility.DockerImageName;

public class KafkaUi extends GenericContainer<KafkaUi> {

    //see resource folder
    public static final String IMAGE = "docker.io/provectuslabs/kafka-ui";

    private static GenericContainer<KafkaUi> instance = null;

    @SuppressWarnings("resource") //testcontainers will do an automatic cleanup
    public static GenericContainer<KafkaUi> getInstance() {

        if (instance == null) {
            instance = new KafkaUi(DockerImageName.parse(IMAGE))
            .withEnv("KAFKA_CLUSTERS_0_NAME", "local")
            .withEnv("KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS", "localhost:9092")
            .withEnv("SERVER_PORT", "50001")
            .withCreateContainerCmdModifier(cmd -> cmd.withName("testcontainers_kafkaui"))
            .withNetworkMode("host") //we do need access to other containers, we should use host network
            .withReuse(false);                

            //add fixed port
            ((KafkaUi) instance).configurePorts(50001, 50001);
        }

        return instance;
    }

    public KafkaUi(ImageFromDockerfile withFileFromClasspath) {
        super(withFileFromClasspath);
    }

    public KafkaUi(DockerImageName dockerImageName) {
        super(dockerImageName);
    }

    public void configurePorts(int hostPort, int containerPort) {
        super.addFixedExposedPort(hostPort, containerPort);        
    }
    
}