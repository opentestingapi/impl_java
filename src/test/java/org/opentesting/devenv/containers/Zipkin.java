package org.opentesting.devenv.containers;

import org.testcontainers.containers.GenericContainer;
import org.testcontainers.images.builder.ImageFromDockerfile;
import org.testcontainers.utility.DockerImageName;

public class Zipkin extends GenericContainer<Zipkin> {

    public static final String IMAGE = "docker.io/openzipkin/zipkin";

    private static GenericContainer<Zipkin> instance = null;

    @SuppressWarnings("resource") //testcontainers will do an automatic cleanup
    public static GenericContainer<Zipkin> getInstance(String networkmode, long memory) {

        if (instance == null) {
            instance = new Zipkin(DockerImageName.parse(IMAGE))
                .withCreateContainerCmdModifier(cmd -> cmd.withName("testcontainers_zipkin"))
                .withCreateContainerCmdModifier(cmd -> cmd.getHostConfig().withMemory(memory))
                //.withEnv("JAVA_TOOL_OPTIONS", "-XX:MaxRAMPercentage=75.0")
                .withNetworkMode(networkmode)
                .withReuse(false);                

            //add fixed port
            ((Zipkin) instance).configurePorts(9411, 9411);
        }

        return instance;
    }

    public Zipkin(ImageFromDockerfile withFileFromClasspath) {
        super(withFileFromClasspath);
    }

    public Zipkin(DockerImageName dockerImageName) {
        super(dockerImageName);
    }

    public void configurePorts(int hostPort, int containerPort) {
        super.addFixedExposedPort(hostPort, containerPort);        
    }
    
}