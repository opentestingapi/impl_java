package org.opentesting.devenv.containers;

import org.testcontainers.containers.GenericContainer;
import org.testcontainers.images.builder.ImageFromDockerfile;
import org.testcontainers.utility.DockerImageName;

public class Grafana extends GenericContainer<Grafana> {

    public static final String IMAGE = "docker.io/grafana/grafana";

    private static GenericContainer<Grafana> instance = null;

    @SuppressWarnings("resource") //testcontainers will do an automatic cleanup
    public static GenericContainer<Grafana> getInstance() {

        if (instance == null) {
            instance = new Grafana(DockerImageName.parse(IMAGE))
                .withCreateContainerCmdModifier(cmd -> cmd.withName("testcontainers_grafana_"+System.currentTimeMillis()))
                .withNetworkMode("host") //we need access to other containers
                .withReuse(false);                

            //add fixed port
            ((Grafana) instance).configurePorts(3000, 3000);
        }

        return instance;
    }

    public Grafana(ImageFromDockerfile withFileFromClasspath) {
        super(withFileFromClasspath);
    }

    public Grafana(DockerImageName dockerImageName) {
        super(dockerImageName);
    }

    public void configurePorts(int hostPort, int containerPort) {
        super.addFixedExposedPort(hostPort, containerPort);        
    }
    
}