package org.opentesting.devenv.containers;

import org.testcontainers.containers.GenericContainer;
import org.testcontainers.images.builder.ImageFromDockerfile;
import org.testcontainers.utility.DockerImageName;

public class Prometheus extends GenericContainer<Prometheus> {

    //see resource folder
    public static final String PATH = "testcontainers/prometheus/";

    private static GenericContainer<Prometheus> instance = null;

    @SuppressWarnings("resource") //testcontainers will do an automatic cleanup
    public static GenericContainer<Prometheus> getInstance() {

        if (instance == null) {
            instance = new Prometheus(
                new ImageFromDockerfile()
                        .withFileFromClasspath("Dockerfile", PATH+"Dockerfile")
                        .withFileFromClasspath("config", PATH+"config"))                                 
                .withCreateContainerCmdModifier(cmd -> cmd.withName("testcontainers_prometheus_"+System.currentTimeMillis()))                
                .withNetworkMode("host") //we do need access to other containers, we should use host network
                .withReuse(false);

            //add fixed port
            ((Prometheus) instance).configurePorts(9090, 9090);
        }

        return instance;
    }

    public Prometheus(ImageFromDockerfile withFileFromClasspath) {
        super(withFileFromClasspath);
    }

    public Prometheus(DockerImageName dockerImageName) {
        super(dockerImageName);
    }

    public void configurePorts(int hostPort, int containerPort) {
        super.addFixedExposedPort(hostPort, containerPort);        
    }
    
}