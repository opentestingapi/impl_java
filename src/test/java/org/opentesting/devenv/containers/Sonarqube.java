package org.opentesting.devenv.containers;

import org.testcontainers.containers.GenericContainer;
import org.testcontainers.images.builder.ImageFromDockerfile;
import org.testcontainers.utility.DockerImageName;

public class Sonarqube extends GenericContainer<Sonarqube> {

    public static final String IMAGE = "docker.io/sonarqube:lts-community";

    private static GenericContainer<Sonarqube> instance = null;

    @SuppressWarnings("resource") //testcontainers will do an automatic cleanup
    public static GenericContainer<Sonarqube> getInstance(String networkmode) {

        if (instance == null) {
            instance = new Sonarqube(DockerImageName.parse(IMAGE))
                .withCreateContainerCmdModifier(cmd -> cmd.withName("testcontainers_sonarqube_"+System.currentTimeMillis()))
                .withNetworkMode(networkmode)
                .withReuse(false);                

            //add fixed port
            ((Sonarqube) instance).configurePorts(9001, 9000); //fix portainer conflict
        }

        return instance;
    }

    public Sonarqube(ImageFromDockerfile withFileFromClasspath) {
        super(withFileFromClasspath);
    }

    public Sonarqube(DockerImageName dockerImageName) {
        super(dockerImageName);
    }

    public void configurePorts(int hostPort, int containerPort) {
        super.addFixedExposedPort(hostPort, containerPort);        
    }
    
}