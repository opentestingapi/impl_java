package org.opentesting;

import java.security.SecureRandom;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;

import org.opentesting.dto.TestCaseCheckDTO;
import org.opentesting.dto.TestCaseDTO;
import org.opentesting.dto.TestCaseInjectionDTO;
import org.opentesting.dto.TestCaseRandomDataDTO;
import org.opentesting.dto.TestCaseReplacementValueDTO;
import org.opentesting.dto.TestCaseValidationDTO;
import org.opentesting.dto.api1dot0.TestCaseCheckDTOapi1dot0;
import org.opentesting.dto.api1dot0.TestCaseCustomParameterDTOapi1dot0;
import org.opentesting.dto.api1dot0.TestCaseDTOapi1dot0;
import org.opentesting.dto.api1dot0.TestCaseInjectionDTOapi1dot0;
import org.opentesting.dto.api1dot0.TestCaseReplacementDTOapi1dot0;
import org.opentesting.dto.api1dot0.TestCaseReplacementValueDTOapi1dot0;
import org.opentesting.dto.api1dot0.TestCaseServiceDTOapi1dot0;
import org.opentesting.dto.api1dot0.TestCaseValidationDTOapi1dot0;

/**
 * generate data for tests
 */
public class TestDataGenerator {

    private Random random = new SecureRandom();

    protected TestCaseDTO createEmptyTest() {
        TestCaseDTO tc = new TestCaseDTOapi1dot0("1.0", "testid1", "testdesc", new ArrayList<>(), new ArrayList<>(), 
                            true, List.of("bar", "foo"), LocalDateTime.now(), null, null);        
        return tc;
    }    

    protected TestCaseInjectionDTO createInject() {

        String timerid = "12345";        
        
        TestCaseReplacementValueDTOapi1dot0 val = new TestCaseReplacementValueDTOapi1dot0(
            1, TestCaseReplacementValueDTO.TYPE_LIST, "aaaa|bbbb", null);
        
        TestCaseReplacementDTOapi1dot0 rg = new TestCaseReplacementDTOapi1dot0("#hallo#", List.of(val), 3);

        TestCaseInjectionDTO inject = new TestCaseInjectionDTOapi1dot0("inject1", List.of("10 * * * * * ?"), createService(), "1d",
                "source.json", List.of("check1"), List.of(rg), true, new ArrayList<>(), timerid, timerid+"_"+random.nextInt(), LocalDateTime.now(),
                null, new TestCaseRandomDataDTO(), "bulkid", "traceid");

        return inject;
    }  

    protected TestCaseServiceDTOapi1dot0 createService() {
        
        TestCaseCustomParameterDTOapi1dot0 c = new TestCaseCustomParameterDTOapi1dot0("topic", "mytopic");
        
        return new TestCaseServiceDTOapi1dot0("kafka", "kafka-broker", "user", "password", List.of(c));
    }

    protected TestCaseCheckDTO createCheck(String checkid) {

        String testid = "testid";

		Map<String, String> randomdata = new HashMap<String, String>();
		randomdata.put("#hallo#", "Hallo Welt!");
        TestCaseRandomDataDTO r = new TestCaseRandomDataDTO();
        r.setRandomdata(randomdata);

        TestCaseValidationDTOapi1dot0 val = new TestCaseValidationDTOapi1dot0(1, "requestfile", TestCaseValidationDTO.TYPE_CONTAINS, List.of("responsefile"));
        
		TestCaseCheckDTO check = new TestCaseCheckDTOapi1dot0(checkid, createService(), List.of(val), "1d", true, 
        		false, List.of("dummy-inject-1"), List.of("dummy-check-1"), List.of("attribute1"),
				checkid+"_"+random.nextInt(), testid, LocalDateTime.now(), LocalDateTime.now().plusMinutes(5), null, null, r, "bulkid", "traceid");

        return check;
    }    

}
