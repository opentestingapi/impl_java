package org.opentesting.persistence;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;

import lombok.extern.slf4j.Slf4j;

@Slf4j
public class AbstractRepository {

    @Autowired
    protected JdbcTemplate jdbcTemplate;    

    //creation
    protected static final String CREATETABLE = "create table if not exists ";
    protected static final String ALTERTABLE = "alter table ";
    protected static final String ADDIFNOTEXISTS = " add if not exists ";
    protected static final String DEFAULTCOLUMN = " (testid VARCHAR(1000) NOT NULL)";
    
    //crud
    protected static final String DELETEFROM = "delete from ";
    protected static final String SELECTVERSIONVALUE = "select version, value from ";
    protected static final String SELECTVALUE = "select value from ";
    protected static final String INSERTINTO = "insert into ";
    protected static final String UPDATE = "update ";

    protected AbstractRepository() {}

    protected void prepareDBinternal(String[] sqls) {
        for (String sql : sqls) {
            try {
                log.info("execute: "+sql);
                jdbcTemplate.execute(sql);
            } catch (Exception e) {
                log.warn("warning preparing internal database", e);
            }
        }
    }

}
