package org.opentesting.persistence;

import java.time.LocalDateTime;
import java.util.List;

import jakarta.annotation.PostConstruct;

import org.opentesting.util.ApplicationContextProvider;
import org.opentesting.util.LogExecutionTime;
import org.springframework.stereotype.Component;

@Component
public class IndexRepository extends AbstractRepository {

    public static final String LABELINDEX = "labelindex";
    public static final String BULKIDINDEXCHECKS = "bulkidindexchecks";
    public static final String BULKIDINDEXINJECTS = "bulkidindexinjects";

    private static final String TABLENAME = "indexstore";
    private static final String[] SQLS = {CREATETABLE+TABLENAME+" (indexname VARCHAR(1000) NOT NULL)"
        ,ALTERTABLE+TABLENAME+ADDIFNOTEXISTS+"indexkey VARCHAR(1000)"
        ,ALTERTABLE+TABLENAME+ADDIFNOTEXISTS+"data VARCHAR(1000)"
        ,ALTERTABLE+TABLENAME+ADDIFNOTEXISTS+"insertts timestamp"
    };

    public IndexRepository(ApplicationContextProvider applicationContextProvider) {
        super(applicationContextProvider);        
    }

    @PostConstruct
    @LogExecutionTime
    public void prepareDB() {
        prepareDBinternal(SQLS);   
    }

    @LogExecutionTime
    public void insert(String indexname, String key, String value) {
        delete(indexname, key, value);
        jdbcTemplate.update(INSERTINTO+TABLENAME+" (indexname, indexkey, data, insertts) VALUES (?, ?, ?, ?)", 
            indexname, key, value, LocalDateTime.now());
    }

    @LogExecutionTime
    public void delete(String indexname, String key, String value) {
        jdbcTemplate.update(DELETEFROM+TABLENAME+" where indexname = ? and indexkey = ? and data = ?", indexname, key, value);
    }

    @LogExecutionTime
    public void deleteByKey(String indexname, String key) {
        jdbcTemplate.update(DELETEFROM+TABLENAME+" where indexname = ? and indexkey = ?", indexname, key);
    }

    @LogExecutionTime
    public void deleteByValue(String indexname, String value) {
        jdbcTemplate.update(DELETEFROM+TABLENAME+" where indexname = ? and data = ?", indexname, value);
    }

    @LogExecutionTime
    public List<String> select(String indexname, String key) {
        return jdbcTemplate.query(
            SELECTDATA+TABLENAME+" where indexname = ? and indexkey = ?", 
            (rs, rowNum) -> rs.getString("data"), indexname, key);
    }

    @LogExecutionTime
    public void deleteOlderThan(String indexname, LocalDateTime maxAge) {
        jdbcTemplate.update(DELETEFROM+TABLENAME+" where indexname = ? and insertts < ?", indexname, maxAge);
    }
    
}