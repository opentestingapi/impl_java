package org.opentesting.util;

import lombok.Setter;
import lombok.Getter;
import lombok.extern.slf4j.Slf4j;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Configuration;

import jakarta.annotation.PostConstruct;

import java.util.Arrays;

/**
 * config import
 */
@Configuration
@ConfigurationProperties(prefix = "opentesting")
@Setter
@Getter
@Slf4j
public class OpenTestingConfig {

    //application name
    private String appname = "";

    //thread poolsize
    private int poolsize;

    //cron for check execution
    private String[] checkcron;

    //default interval for check executions
    private String defaultcheckinterval;

    //warning after x sec (method execution)
    private int longrunningwarn;

    //limit for check download
    private int downloadmaxchecks;

    //REST connect and read timeout in sec
    private int resttimeout;

    //reload test cases from database
    private boolean reloadtestcases;

    //database cleanup after x days
    private int autodelete;

    //password salt
    private String salt;

    //use a lock to avoid user disablement
    private boolean uselock = true;

    @PostConstruct    
    private void logProperties() {
        log.info("OpenTesting appname: "+appname);
        log.info("OpenTesting poolsize: "+poolsize);
        log.info("OpenTesting checkcron: "+Arrays.asList(checkcron));
        log.info("OpenTesting defaultcheckinterval: "+defaultcheckinterval);
        log.info("OpenTesting longrunningwarn (sec): "+longrunningwarn);
        log.info("OpenTesting resttimeout (sec): "+resttimeout);
        log.info("OpenTesting reloadtestcases: "+reloadtestcases);
        log.info("OpenTesting autodelete (days): "+autodelete);
        log.info("OpenTesting uselock: "+uselock);
    }    

}