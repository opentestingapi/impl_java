package org.opentesting.util;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.scheduling.TaskScheduler;
import org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler;

@Configuration
public class TaskSchedulerConfig {

    @Bean
    public TaskScheduler taskScheduler(OpenTestingConfig config) {
        //do not wait for delayed jobs
        ThreadPoolTaskScheduler threadPoolTaskScheduler = new ThreadPoolTaskScheduler(){
            private static final long serialVersionUID = -1L;
            @Override
            public void destroy() {
                this.getScheduledThreadPoolExecutor().setExecuteExistingDelayedTasksAfterShutdownPolicy(false);
                super.destroy();
            }
        };

        //poolsize
        threadPoolTaskScheduler.setPoolSize(config.getPoolsize());
        threadPoolTaskScheduler.setThreadNamePrefix("ThreadPoolTaskScheduler");

        //do wait for actual running ones
        threadPoolTaskScheduler.setWaitForTasksToCompleteOnShutdown(true);

        return threadPoolTaskScheduler;
    }
    
}
