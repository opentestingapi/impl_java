package org.opentesting.services.adapter.cassandra;

import java.time.LocalDateTime;

import com.datastax.driver.core.Cluster;
import com.datastax.driver.core.Session;
import com.datastax.driver.core.Cluster.Builder;

import lombok.extern.slf4j.Slf4j;

@Slf4j
public class CassandraConnector {

    private Builder builder;
    private Cluster cluster;
    private Session session;
    private String info;
    private LocalDateTime creation;

    public CassandraConnector(String connectstring, String connectuser, String connectpassword) {

        //PK
        info = connectstring+"#"+connectuser;

        String node = connectstring.split(":")[0];
        Integer port = Integer.parseInt(connectstring.split(":")[1]);

        builder = Cluster.builder()
            .withoutJMXReporting()
            .withCredentials(connectuser, connectpassword)
            .addContactPoint(node);

        if (port != null) {
            builder.withPort(port);
        }

        connect();
    }

    private void connect() {

        cluster = builder.build();
        session = cluster.connect();

        creation = LocalDateTime.now();

        log.info("CassandraConnection connected: "+getInfo());
    }

    public Session getSession() {

        //close older ones
        if (getCreation().isBefore(LocalDateTime.now().plusHours(-1))) {
            close();            
            connect();            
        }

        return this.session;
    }

    public void close() {
        session.close();
        cluster.close();
        log.info("CassandraConnection closed: "+getInfo());
    } 

    public LocalDateTime getCreation() {
        return creation;
    }

    public String getInfo() {
        return info;
    }
    
}