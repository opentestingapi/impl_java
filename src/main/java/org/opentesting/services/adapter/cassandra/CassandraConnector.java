package org.opentesting.services.adapter.cassandra;

import java.net.InetSocketAddress;
import java.time.LocalDateTime;

import com.datastax.oss.driver.api.core.CqlSession;
import com.datastax.oss.driver.api.core.CqlSessionBuilder;

import lombok.extern.slf4j.Slf4j;

@Slf4j
public class CassandraConnector {

    private CqlSessionBuilder sessionBuilder;
    private CqlSession session;
    private String info;
    private LocalDateTime creation;

    public CassandraConnector(String connectstring, String connectuser, String connectpassword, String datacenter) {

        //PK
        info = connectstring+"#"+connectuser;

        String node = connectstring.split(":")[0];
        Integer port = Integer.parseInt(connectstring.split(":")[1]);

        sessionBuilder = CqlSession.builder()
            .addContactPoint(new InetSocketAddress(node, port))   
            .withLocalDatacenter(datacenter)   
            .withAuthCredentials(connectuser, connectpassword); 

        connect();
    }

    private void connect() {

        session = sessionBuilder.build();

        creation = LocalDateTime.now();

        log.info("CassandraConnection connected: "+getInfo());
    }

    public CqlSession getSession() {

        //close older ones
        if (getCreation().isBefore(LocalDateTime.now().plusHours(-1))) {
            close();            
            connect();            
        }

        return this.session;
    }

    public void close() {
        session.close();
        log.info("CassandraConnection closed: "+getInfo());
    } 

    public LocalDateTime getCreation() {
        return creation;
    }

    public String getInfo() {
        return info;
    }
    
}