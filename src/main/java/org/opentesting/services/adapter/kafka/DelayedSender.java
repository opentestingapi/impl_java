package org.opentesting.services.adapter.kafka;

import org.apache.kafka.clients.producer.Producer;
import org.apache.kafka.clients.producer.ProducerRecord;
import org.opentesting.dto.TestCaseInjectionDTO;

import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;

/**
 * sometimes the consumer is to fast for result2random, as a workaround we will give a fixed "delay" to every message
 */
@AllArgsConstructor
@Slf4j
public class DelayedSender implements Runnable {

    private String testid;
    private TestCaseInjectionDTO inject;
    private Producer<String, String> producer;
    private ProducerRecord<String, String> kafkarecord;    

    @Override
    public void run() {
        try {
            log.info(testid + " " + inject.getInjectid() + " " + inject.getInstanceid() + ": sending delayed record");
            producer.send(kafkarecord);            
        } catch (Exception e) {
            log.error("kafkarecord not produced", e);
        }
    }
    
}