package org.opentesting.services.adapter.kafka;

import java.util.Map;
import java.util.Properties;

import org.opentesting.util.LogExecutionTime;

import org.apache.kafka.clients.producer.KafkaProducer;
import org.apache.kafka.clients.producer.ProducerConfig;
import org.apache.kafka.common.serialization.StringSerializer;
import org.springframework.stereotype.Component;

@Component
public class OpenTestingKafkaProducerFactory {

    @LogExecutionTime
    public KafkaProducer<String,String> createProducer(String broker, String connectuser, String connectpassword, Map<String,String> serviceparam) {

        Properties props = new Properties();        
        props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, broker);
        props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);
        props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);

        //user and password
        if (connectuser != null && connectuser.length() > 0) {
            props.put("security.protocol", serviceparam.get("security.protocol"));
            props.put("sasl.mechanism", serviceparam.get("sasl.mechanism"));
            props.put("sasl.jaas.config", serviceparam.get("login.module") + " required username=\"" + connectuser + "\" password=\"" + connectpassword + "\";");
        }
 
        return new KafkaProducer<>(props);
    }
    
}
