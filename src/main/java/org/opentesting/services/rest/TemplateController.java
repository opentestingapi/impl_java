package org.opentesting.services.rest;

import jakarta.servlet.http.HttpServletResponse;

import org.springframework.core.io.DefaultResourceLoader;
import org.springframework.core.io.Resource;
import org.springframework.core.io.ResourceLoader;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import io.swagger.v3.oas.annotations.Operation;

@RestController
@RequestMapping("/template")
public class TemplateController {

    @Operation(summary = "download json to be used as template")
    @GetMapping(value = "/testcase", produces = MediaType.APPLICATION_JSON_VALUE)
    public Resource testcase(HttpServletResponse response) {
        
        ResourceLoader resourceLoader = new DefaultResourceLoader();
        return resourceLoader.getResource("classpath:templates/templatetest.json");
    }

    @Operation(summary = "download json schema")
    @GetMapping(value = "/jsonschema", produces = MediaType.APPLICATION_JSON_VALUE)
    public Resource jsonschema(HttpServletResponse response) {
        
        ResourceLoader resourceLoader = new DefaultResourceLoader();
        return resourceLoader.getResource("classpath:templates/OpenTestApiSchema_v1.0.json");
    }

    @Operation(summary = "download json to be used as Grafana Dashboard")
    @GetMapping(value = "/dashboard", produces = MediaType.APPLICATION_JSON_VALUE)
    public Resource dashboard(HttpServletResponse response) {
        
        ResourceLoader resourceLoader = new DefaultResourceLoader();
        return resourceLoader.getResource("classpath:templates/OpenTesting-Dashboard.json");
    }

}