package org.opentesting.dto.migration;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;

import org.opentesting.dto.TestCaseReplacementValueDTO;
import org.opentesting.dto.api1_0.TestCaseReplacementValueDTOapi1_0;
import org.opentesting.util.OpenTestingConversion;
import org.opentesting.util.exceptions.MigrationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class TestCaseReplacementValueDTOMigration {

    @Autowired
    private OpenTestingConversion e2EConversion;

    @SuppressWarnings("rawtypes")
    private Class[] versions = {TestCaseReplacementValueDTOapi1_0.class};

    @SuppressWarnings("unchecked")
    public TestCaseReplacementValueDTO toLatest(String version, String json) throws JsonMappingException, JsonProcessingException, MigrationException {

        if (version.equals(versions[versions.length - 1].getSimpleName())) 
            return (TestCaseReplacementValueDTO) e2EConversion.json2object(json, versions[versions.length - 1]);

        throw new MigrationException("unknown conversion: "+version);
    }

    @SuppressWarnings("rawtypes")
    public TestCaseReplacementValueDTO toLatest(Class version, String json) throws JsonMappingException, JsonProcessingException, MigrationException {
        return toLatest(version.getSimpleName(), json);
    }
    
}