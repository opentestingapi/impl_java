package org.opentesting.dto.migration;

import com.fasterxml.jackson.core.JsonProcessingException;

import org.opentesting.dto.TestCaseCustomParameterDTO;
import org.opentesting.dto.api1.TestCaseCustomParameterDTOapi1;
import org.opentesting.util.ApplicationContextProvider;
import org.opentesting.util.OpenTestingConversion;
import org.opentesting.util.exceptions.MigrationException;
import org.springframework.stereotype.Component;

@Component
public class TestCaseCustomParameterDTOMigration {

    private OpenTestingConversion e2EConversion;

    public TestCaseCustomParameterDTOMigration(ApplicationContextProvider applicationContextProvider) {
        e2EConversion = applicationContextProvider.getBean(OpenTestingConversion.class);
    }

    @SuppressWarnings("rawtypes")
    private Class[] versions = {TestCaseCustomParameterDTOapi1.class};

    @SuppressWarnings("unchecked")
    public TestCaseCustomParameterDTO toLatest(String version, String json) throws JsonProcessingException, MigrationException {

        if (json == null || json.isEmpty()) return null;

        if (version.equals(versions[versions.length - 1].getSimpleName())) 
            return (TestCaseCustomParameterDTO) e2EConversion.json2object(json, versions[versions.length - 1]);
        
        throw new MigrationException("unknown conversion: "+version);
    } 
    
    @SuppressWarnings("rawtypes")
    public TestCaseCustomParameterDTO toLatest(Class version, String json) throws JsonProcessingException, MigrationException {
        return toLatest(version.getSimpleName(), json);
    } 
    
}