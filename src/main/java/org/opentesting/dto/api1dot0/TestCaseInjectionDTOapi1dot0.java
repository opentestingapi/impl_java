package org.opentesting.dto.api1dot0;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import org.opentesting.dto.TestCaseInjectionDTO;
import org.opentesting.dto.TestCaseReplacementDTO;

import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Setter
@NoArgsConstructor
public class TestCaseInjectionDTOapi1dot0 extends TestCaseInstance implements TestCaseInjectionDTO {

    //API should never use null as default
    @Getter
    private String injectid = "";   
    
    @Getter
    private List<String> cron = new ArrayList<>();  
    
    @Getter
    private TestCaseServiceDTOapi1dot0 service = new TestCaseServiceDTOapi1dot0();

    @Getter
    private String timetolive = "1d"; //default only one day

    @Getter
    private String sourcefile = "";

    @Getter
    private List<String> checks = new ArrayList<>();

    private List<TestCaseReplacementDTOapi1dot0> replacements = new ArrayList<>();

    @Getter
    private boolean active = true;

    @Getter
    private List<String> result2random = new ArrayList<>();

    //extensions should have default null
    @Getter
    private String timerid = null; //required to "disable" outdated timers - because they will stay active

    @Getter
    private LocalDateTime schedulets = null;

    @Override
    public String getVersion() {
        return this.getClass().getSimpleName();
    }

    @Override
    public List<TestCaseReplacementDTO> getReplacements() {
        List<TestCaseReplacementDTO> result = new ArrayList<>();        
        for (TestCaseReplacementDTOapi1dot0 rep : replacements) result.add(rep);
        return result;
    }

}
