version: '3.3'
services:

    vsc-server:
        build: .
        container_name: opentesting-vsc-server
        hostname: vsc-server
        volumes:
            - ${HOME}/.config/code-server/config.yaml:/home/coder/.config/code-server/config.yaml
            - ${HOME}/.m2/repository:/home/coder/.m2/repository
            - ${HOME}/.m2/settings.xml:/home/coder/.m2/settings.xml
            - ${HOME}/.gitconfig:/home/coder/.gitconfig
            - ${PWD}/..:/home/coder/project
        environment:
            - DOCKER_USER=$USER
            - PORT=40000
        expose:
            - 40000
        ports:
            - 40000:40000
        user: "${EXAMPLE_UID}:${EXAMPLE_GID}"
    
    cassandra-db:
        build: cassandra
        container_name: opentesting-cassandra-db
        hostname: cassandra-db
        volumes:
            - ${PWD}/cassandra_scripts:/var/lib/cassandra/initializerscripts
        expose:
            - 9042
        ports:
            - 9042:9042

#    oracle-db:
#        image: quillbuilduser/oracle-18-xe-micro-sq
#        container_name: opentesting-oracle-db
#        hostname: oracle-db
#        volumes: 
#            - ${PWD}/oracle_scripts:/opt/oracle/product/18c/dbhomeXE/initializerscripts
#        expose:
#            - 1521
#        ports:
#            - 1521:1521

    zookeeper:
        image: confluentinc/cp-zookeeper:5.2.1
        container_name: opentesting-zookeeper
        hostname: zookeeper
        volumes:
            - ${PWD}/kafka_scripts:/var/lib/kafka/initializerscripts
        environment:
            - ZOOKEEPER_CLIENT_PORT=2181
        expose:
            - 2181
        ports:
            - 2181:2181
            
    kafka-broker: 
        image: confluentinc/cp-kafka:5.2.1
        container_name: opentesting-kafka-broker
        depends_on: 
            - zookeeper
        hostname: kafka-broker
        environment:
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker:9092
            - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
            - KAFKA_AUTO_DELETE_TOPIC_ENABLE=true
            - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
            - KAFKA_JMX_PORT=29999
            - KAFKA_JMX_HOSTNAME=kafka-broker
            - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka-broker -Dcom.sun.management.jmxremote.port=39999 -Dcom.sun.management.jmxremote.rmi.port=39999
        expose:
            - 9092
        ports:
            - 9092:9092
            
    prometheus:
        image: prom/prometheus
        container_name: opentesting-prometheus
        hostname: prometheus
        volumes:
            - ${PWD}/prometheusconfig:/etc/prometheus
        expose:
            - 9090
        ports:
            - 9090:9090

    grafana:
        image: grafana/grafana
        container_name: opentesting-grafana
        hostname: grafana
        expose:
            - 3000
        ports:
            - 3000:3000

    zipkin:
        image: openzipkin/zipkin
        container_name: opentesting-zipkin
        hostname: zipkin
        expose:
            - 9411
        ports:
            - 9411:9411

    sonarqube:
        image: sonarqube
        container_name: opentesting-sonarqube
        hostname: sonarqube
        environment:
            - SONAR_EMBEDDEDDATABASE_PORT=19092
        expose:
            - 9000
        ports:
            - 9000:9000

    keycloak:
        image: dcm4che/keycloak:7.0.1
        container_name: opentesting-keycloak
        hostname: keycloak
        environment:
            - KEYCLOAK_USER=admin
            - KEYCLOAK_PASSWORD=admin
        expose:
            - 8080
        ports:
            - 8080:8080

    postgres:
        image: postgres
        container_name: opentesting-postgres
        hostname: postgres
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=CTYgzqP9uF8BfA9X   
        expose:
            - 5432
        ports:
            - 5432:5432
