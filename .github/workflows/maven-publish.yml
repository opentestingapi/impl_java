# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

#on:
#  release:
#    types: [created]
on: push

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn clean install
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Version
      run: echo ${GITHUB_REF##*/}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    -
      name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: opentestingapi/opentesting:latest

    #- name: Build Multi-Arch Container
      #run: docker buildx build --platform linux/amd64,linux/arm64 -t ghcr.io/opentesting:${GITHUB_REF##*/} . && docker push ghcr.io/opentesting:${GITHUB_REF##*/}
      #run: docker buildx build --platform linux/amd64,linux/arm64 -t ghcr.io/opentesting:latest . && docker push ghcr.io/opentesting:latest
      #env:
        #GITHUB_TOKEN: ${{ github.token }}
