<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>org.opentesting</groupId>
	<artifactId>impl_java</artifactId>
	<version>1.0</version>
	<name>impl_java</name>
	<description>open testing implementation spring boot</description>

	<properties>
		<java.version>11</java.version>
		<cassandra.version>3.11.0</cassandra.version>	
		<springfox.version>3.0.0</springfox.version>	
		<spring.cloud.version>3.0.4</spring.cloud.version>
		<cache2k.version>2.4.1.Final</cache2k.version>
		<markdownpagegenerator.version>2.4.0</markdownpagegenerator.version>
		<rgxgen.version>1.3</rgxgen.version>	
		<brave-instrumentation-kafka-clients>5.13.6</brave-instrumentation-kafka-clients>
		<junit.version>4.13.2</junit.version>
		<json-schema-validator>1.0.64</json-schema-validator>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>	
			
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter</artifactId>
			<version>${spring.cloud.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- sleuth support -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
			<version>${spring.cloud.version}</version>
		</dependency>

		<!-- zipkin support -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-sleuth-zipkin</artifactId>
			<version>${spring.cloud.version}</version>
		</dependency>

		<!-- using AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>

		<!-- netty extension -->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-transport-native-epoll</artifactId>			
			<classifier>linux-x86_64</classifier>
		</dependency>

		<!-- internal database support -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- external database support -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- metrics prometheus -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- simplify getter, setter, log ... -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>			
		</dependency>

		<!-- jackson extension -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>

		<!-- cache -->
		<dependency>
			<groupId>org.cache2k</groupId>
			<artifactId>cache2k-api</artifactId>
			<version>${cache2k.version}</version>
		</dependency>
		<dependency>
			<groupId>org.cache2k</groupId>
			<artifactId>cache2k-core</artifactId>
			<version>${cache2k.version}</version>
		</dependency>

		<!-- swagger support -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-boot-starter</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
		</dependency>

		<!-- adapter kafka -->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.zipkin.brave</groupId>
			<artifactId>brave-instrumentation-kafka-clients</artifactId>		
			<version>${brave-instrumentation-kafka-clients}</version>	
		</dependency>

		<!-- adapter cassandra -->
		<dependency>
			<groupId>com.datastax.cassandra</groupId>
			<artifactId>cassandra-driver-core</artifactId>
			<version>${cassandra.version}</version>
		</dependency>

		<!-- adapter oracle -->
		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc11</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- regex to random value -->
		<dependency>
			<groupId>com.github.curious-odd-man</groupId>
			<artifactId>rgxgen</artifactId>
			<version>${rgxgen.version}</version>
		</dependency>

		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- JSON schema validator -->
		<dependency>
			<groupId>com.networknt</groupId>
			<artifactId>json-schema-validator</artifactId>
			<version>${json-schema-validator}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>					
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- get version and name in application properties -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>				
				<configuration>
					<delimiters>
						<delimiter>^</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
				</configuration>
			</plugin>
			<!-- markdown to html -->
			<plugin>
				<groupId>com.ruleoftech</groupId>
				<artifactId>markdown-page-generator-plugin</artifactId>
				<version>${markdownpagegenerator.version}</version>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<recursiveInput>true</recursiveInput>
					<transformRelativeMarkdownLinks>true</transformRelativeMarkdownLinks>
					<inputDirectory>${basedir}</inputDirectory>
					<outputDirectory>${basedir}/target/classes/static</outputDirectory>
					<inputEncoding>UTF-8</inputEncoding>
					<outputEncoding>UTF-8</outputEncoding>
					<copyDirectories>architecture,src/main/resources/templates,examples</copyDirectories>
				</configuration>
			</plugin>
			<!-- build container using JIB -->
            <plugin>
		        <groupId>com.google.cloud.tools</groupId>
		        <artifactId>jib-maven-plugin</artifactId>
				<version>3.1.4</version>
		        <configuration>
		          <from>				    
				    <image>openjdk:11-jre-slim</image>
				  </from>
		          <to>
		            <image>opentesting:latest</image>		            			    
		          </to>		          
		          <container>
				    <jvmFlags>
					  <jvmFlag>-XX:+UseContainerSupport</jvmFlag>
					  <!-- UseContainerSupport: default, but we shoud set explicitly -->
				      <!--PROBLEM FOR LOCAL ENV AS DOCKER_COMPOSE LIMITS IGNORED jvmFlag>-XX:MaxRAMPercentage=75.0</jvmFlag-->
					  <!-- MaxRAMPercentage: for container with more than 256 MB RAM, otherwise use MinRAMPercentage -->
					  <!--PROBLEM FOR LOCAL ENV AS DOCKER_COMPOSE LIMITS IGNORED jvmFlag>-XX:InitialRAMPercentage=75.0</jvmFlag-->
					  <!-- InitialRAMPercentage: use max as this is easier for JVM GC and will fail during startup not during load -->					  
				    </jvmFlags>
				    <mainClass>org.opentesting.OpenTestingApplication</mainClass>
				  </container>	
		        </configuration>           
		    </plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</pluginRepository>
	</pluginRepositories>

</project>
